=for comment based on iup-3.5 - http://www.tecgraf.puc-rio.br/iup/en/elem/iuptimer.html

[% h.name %]

[% n.iuptimer %]

[% h.desc %]

Creates a timer which periodicaly invokes a callback when the time is up.
Each timer should be destroyed using L<Destroy|[%m.elem%]/"Destroy()"> (or simply by C<undef $timer>).

[% h.usage %]

[% h.create %]

 $timer = IUP::Timer->new();

B<Returns:> the identifier of the created element, or C<undef> if an error occurs.

[% txt.new_attr %]

[% h.at %]

[%txt.at_intro%]

=over

=item B<TIME>

The time interval in milliseconds. In Windows the minimum
value is 10ms.

=item B<RUN>

Starts and stops the timer. Possible values: "YES" or "NO".
Returns the current timer state. If you have multiple threads start the
timer in the main thread.

=item B<WID>

I<(read-only)> Returns the native serial number of the timer.
Returns -1 if not running. A timer is mapped only when it is running.

=back

[% h.cb %]

[%txt.cb_intro%]

=over

=item B<ACTION_CB>

Called when the time is up.

[%h.at_handler%]

 sub action_cb_handler {
   my ($self) = @_;
   #...
 }

=over

B<$self:> reference to the element (IUP::Timer) that activated the event

B<Returns:> IUP_CLOSE will be processed.

=back

=back

[% h.examples %]

[% IF examples.iuptimer %]
The element B<IUP::Timer> is used in the following sample scripts:

=over
[%FOREACH e IN examples.iuptimer %]
=item * L<[%e.pl%]|[%url.examples%][%e.pl%]>[%e.desc%]
[%END%]
=back 

[%ELSE%]
Unfortunately there are no sample scripts using this element.

[%END%]

[% h.see %]

[%IF flags.gennerate_origdoc -%]
The original doc: L<iuptimer.html|[%url.iuporigdoc%]elem/iuptimer.html>
[%END%] 

=cut