=for comment based on iup-3.5 - http://www.tecgraf.puc-rio.br/iup/en/elem/iupmenu.html

[% h.name %]

[% n.iupmenu %]

[% h.desc %]

Creates a menu element, which groups 3 types of interface elements:
item, submenu and separator. Any other interface element defined inside
a menu will be an error.

=begin HTML

[% html.iupmenu %]
[% html.iupmenu_fromsyntax %]

=end HTML

[% h.usage %]

[% h.create %]

 $menu = IUP::Menu->new(Ihandle *child, ...);
 #standard way
 my $menu = IUP::Menu->new( child=>[$elem1, $elem2], ANYATTRIBUTE=>'any value' );
 
 #or with just a single child
 my $menu = IUP::Menu->new( child=>$elem, ANYATTRIBUTE=>'any value' );
 
 #or with just 1 parameter (arrayref)
 my $menu = IUP::Menu->new( [$elem1, $elem2] );
 
 #or with just 1 parameter (reference to child elements)
 my $menu = IUP::Menu->new( $elem ); 

B<child:> (named parameter) List of the references to elements (or just a single element) that 
will be grouped by the menu.

B<Returns:> the identifier of the created element, or C<undef> if an error occurs.

[% txt.new_attr %]

[% h.at %]

[%txt.at_intro%]

=over

=item * L<BGCOLOR|[%m.at%]/BGCOLOR>

The background color of the menu, affects all items in the menu. 

=item * B<X<RADIO>RADIO> (non inheritable)

Enables the automatic toggle of one
child item. When a child item is selected the other item is
automatically deselected. The menu acts like a L<IUP::Radio|IUP::Radio> for its
children. Submenus and their children are not affected.

=item * L<WID|[%m.at%]/WID> (non inheritable)

In Windows, returns the HMENU of the menu.

=back

[% h.cb %]

[%txt.cb_intro%]

=over

=item L<OPEN_CB|[%m.cb%]/OPEN_CB>

Called just before the menu is opened.

=item L<MENUCLOSE_CB|[%m.cb%]/MENUCLOSE_CB>

Called just after the menu is closed.

=back

[%txt.cb_common%]

=over

=item * L<MAP_CB|[%m.cb%]/MAP_CB>,
L<UNMAP_CB|[%m.cb%]/UNMAP_CB>

=back

[% h.notes %]

A menu can be a menu bar of a dialog, defined by the dialog's MENU
attribute, or a popup menu.

A popup menu is displayed for the user using the L<Popup|[%m.elem%]/"Popup()"> function
(usually on the mouse position) and disappears when an item is
selected.

L<Destroy|[%m.elem%]/"Destroy()"> should be called only for popup menus. Menu bars
associated with dialogs are automatically destroyed when the dialog is
destroyed. But if you change the menu of a dialog for another menu, the
previous one should be destroyed using L<Destroy|[%m.elem%]/"Destroy()">. If you replace a
menu bar of a dialog, the previous menu is unmapped.

Any item inside a menu bar can retrieve attributes from the dialog
using L<GetAttribute|[%m.elem%]/"GetAttribute()">. It is not necessary to call L<GetDialog|[%m.elem%]/"GetDialog()">.

The menu can be created with no elements and be dynamic filled using
L<Append|[%m.elem%]/"Append()"> or L<Insert|[%m.elem%]/"Insert()">.

[% h.examples %]

[% IF examples.iupmenu %]
The element B<IUP::Menu> is used in the following sample scripts:

=over
[%FOREACH e IN examples.iupmenu %]
=item * L<[%e.pl%]|[%url.examples%][%e.pl%]>[%e.desc%]
[%END%]
=back 

[%ELSE%]
Unfortunately there are no sample scripts using this element.

[%END%]

[% h.see %]

L<IUP::Dialog|IUP::Dialog>, L<IUP::Item|IUP::Item>,
L<IUP::Separator|IUP::Separator>, L<IUP::Submenu|IUP::Submenu>,
L<Popup|[%m.elem%]/"Popup()">,
L<Destroy|[%m.elem%]/"Destroy()">

[%IF flags.gennerate_origdoc -%]
The original doc: L<iupmenu.html|[%url.iuporigdoc%]elem/iupmenu.html>
[%END%] 

=cut