=head1 CD_IUP - IUP Driver (cdiup.h)

CD_IUPDBUFFER - IUP driver using double buffer (since 5.8)

CD_IUPDBUFFERRGB - IUP driver using image rgb double buffer (since 5.8)

This driver provides access to an interface element of a IUP canvas.
IUP is a portable user-interface library used to create portable
user-interface applications. See L<IUP
documentation|http://www.tecgraf.puc-rio.br/iup>.

=head2 Use

The canvas is created by means of a call to the function
L<B<cdCreateCanvas>|../func/init.html#cdCreateCanvas>(CD_IUP, Data),
after which other CD functions can be called as usual. This function
creates a CD canvas based on the existing IUP canvas. The parameter
Data is a pointer to a handle of the IUP canvas (Ihandle*). For use
with CDLUA, a canvas created with IUPLUA must necessarily be passed as
parameter.

Any amount of such canvases may exist simultaneously, but they should
not use the same IUP canvas. It is important to note that a call to
function L< B<cdKillCanvas>|../func/init.html#cdKillCanvas> is required
to B<close> the file properly.

The CD canvas is automatically stored in the IUP canvas as the
B<"_CD_CANVAS"> attribute.

For the double buffer versions two canvas will be created. The returned
canvas is the back buffer canvas. This canvas is stored as the
B<"_CD_CANVAS_DBUFFER"> attribute and the front buffer canvas will
still be stored as the B<"_CD_CANVAS"> attribute.

To use this driver, it must be linked with the "B<iupcd>" library
available in the IUP distribution.

In Lua, it is necessary to call function B<cdluaiup_open() >after a
call to function B<cdlua_open()>, apart from linking with the
"B<iupluacd>" library. This is not necessary if you do
require"iupluacd".

=head2 Behavior of Functions

This driver depends on the L<Native Window|native.html> driver.

When using the double buffer versions see the L<Double
Buffer|dbuf.html> and L<Double Buffer using a RGB image|dbufrgb.html>
drivers documentation.

=cut