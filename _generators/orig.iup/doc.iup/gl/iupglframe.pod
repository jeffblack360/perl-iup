=head1 IupGLFrame (since 3.11)

Creates an embedded OpenGL container, which draws a frame with a title
around its child. It inherits from
L<IupGLSubCanvas|iupglsubcanvas.html>. It exists only inside an
L<IupGLCanvasBox|iupglcanvasbox.html>.

=head2 Creation

 Ihandle* IupGLFrame(Ihandle *child); [in C]
 iup.glframe{child: ihandle} -> (elem: ihandle) [in Lua]
 glframe(child) [in LED]

B<child>: Identifier of an interface element which will receive the
frame around. It can be NULL (nil in Lua), not optional in LED.

Returns: the identifier of the created element, or NULL if an error
occurs.

=head2 Attributes

The B<IupGLFrame> element handle all attributes defined for a
L<IupGLSubCanvas|iupglsubcanvas.html> control.

=over

----

=back

B<ALIGNMENT> (non inheritable): horizontal and vertical alignment.
Possible values: "ALEFT", "ACENTER" and "ARIGHT", combined to "ATOP",
"ACENTER" and "ABOTTOM". Default: "ACENTER:ACENTER". Partial values are
also accepted, like "ARIGHT" or ":ATOP", the other value will be used
from the current alignment.

B<BACKCOLOR> (non inheritable): color used as background when TITLE and
IMAGE are not defined. Can have an alpha component. Default: NULL. Used
instead of BGCOLOR to avoid inheritance problems.

L<EXPAND|../attrib/iup_expand.html> (non inheritable): The default
value is "YES".

B<FORECOLOR> (non inheritable): Text color. Can have an alpha
component. Default: "0 0 0". Used instead of FGCOLOR to avoid
inheritance problems.

B<FRAMECOLOR> (non inheritable): color used to draw the frame border.
Can have an alpha component. Default: "50 150 255". Used instead of
BORDERCOLOR to avoid inheritance problems.

B<FRAMEWIDTH> (non inheritable): line width of the frame border.
Default: 1. Used instead of BORDERWIDTH to avoid inheritance problems.

B<IMAGE> (non inheritable): Image name. Use
L<IupSetHandle|../func/iupsethandle.html> or
L<IupSetAttributeHandle|../func/iupsetattributehandle.html> to
associate an image to a name. See also L<IupImage|iupimage.html>.

B<IMAGEHIGHLIGHT> (non inheritable): Image name of the element in
highlight state.

B<IMAGEINACTIVE> (non inheritable): Image name of the element when
inactive. If it is not defined then the IMAGE is used and the colors
will be replaced by a modified version creating the disabled effect.

B<IMAGEPRESS >(non inheritable): Image name of the element in pressed
state.

B<IMAGEPOSITION >(non inheritable): Position of the image relative to
the text when both are defined. Can be: LEFT, RIGHT, TOP, BOTTOM.
Default: LEFT.

B<MOVEABLE> (non inheritable): enable the frame to be interactively
moved when it is a direct child of the B< IupGLCanvasBox>. Default: NO.

B<PADDING> (non inheritable): internal margin for the title area.
Default value: "2x0".

B<SPACING> (non inheritable): defines the spacing between the image and
the title. Default: "2".

L<TITLE|../attrib/iup_title.html> (non inheritable): Text the user will
see at the top of the frame.

B<TITLEBOX> (non inheritable): enable a different visual style for the
frame. Instead of the traditional round frame that starts and ends at
the title area, it will draw a filled box for the title area and a
regular rectangle around the child. Default: NO.

B<TITLEOFFSET> (non inheritable): horizontal offset from the left
border to start the title area. Default: 5.

=over

----

=back

L<CLIENTSIZE|../attrib/iup_clientsize.html>,
L<CLIENTOFFSET|../attrib/iup_clientoffset.html>: also accepted.

=head2 Callbacks

The B<IupGLFrame> element handle all callbacks defined for the
B<IupGLSubCanvas> control.

=over

----

=back

B<MOVE_CB>: Called after the frame was moved on the B< IupGLCanvasBox>,
when MOVEABLE=Yes. The coordinates are the same as the
L<POSITION|../attrib/iup_position.html> attribute.

 int function(Ihandle *ih, int x, int y); [in C]elem:trayclick_cb(x, y: number) -> (ret: number) [in Lua]

B<ih>: identifier of the element that activated the event.

B<x>, B<y>: coordinates of the new position.

=head2 Notes

The B<IupGLFrame> can contain text and image simultaneously at the
title area.

The frame can be created with no elements and be dynamic filled using
L<IupAppend|../func/iupappend.html> or
L<IupInsert|../func/iupinsert.html>.

=cut