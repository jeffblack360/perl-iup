=head1 IupClipboard (since 3.0)

Creates an element that allows access to the clipboard. Each clipboard
should be destroyed using L<IupDestroy|../func/iupdestroy.html>, but
you can use only one for the entire application because it does not
store any data inside. Or you can simply create and destroy every time
you need to copy or paste.

=head2 Creation

 Ihandle* IupClipboard(void); [in C]
 iup.clipboard{} -> (elem: ihandle) [in Lua] 
 clipboard() [in LED]

Returns: the identifier of the created element, or NULL if an error
occurs.

=head2 Attributes

B<ADDFORMAT> (write-only): register a custom format for clipboard data
given its name. The registration remains valid even after the element
is destroyed. (since 3.7)

B<EMFAVAILABLE> (read-only) [Windows Only]: informs if there is a
Windows Enhanced Metafile available at the clipboard. (Since 3.2)

B<FORMAT>: set the current format to be used by the FORMATAVAILABLE and
FORMATDATA attributes. (since 3.7)

B<FORMATAVAILABLE> (read-only): informs if there is a data in the
FORMAT available at the clipboard. If FORMAT is not set returns NULL.
(since 3.7)

B<FORMATDATA>: sets or retrieves the data from the clipboard in the
format defined by the FORMAT attribute. If FORMAT is not set returns
NULL. If set to NULL clears the clipboard data. When set the
FORMATDATASIZE attribute must be set before with the data size. When
retrieved FORMATDATASIZE will be set and available after data is
retrieved. (since 3.7)

B<FORMATDATASIZE>: size of the data on the clipboard. Used by the
FORMATDATA attribute processing. (since 3.7)

B<IMAGE> (write-only): name of an image to copy (set) or paste (get),
to or from the clipboard. If set to NULL clears the clipboard data.
(GTK 2.6)

B<IMAGEAVAILABLE> (read-only): informs if there is an image available
at the clipboard. (GTK 2.6)

B<NATIVEIMAGE>: native handle of an image to copy or paste, to or from
the clipboard. In Win32 is a B<HANDLE> of a DIB. In GTK is a
B<GdkPixbuf*>. In Motif is a B<Pixmap>. If set to NULL clears the
clipboard data. The returned handle in a paste must be released after
used (GlobalFree(handle), g_object_unref(pixbuf) or
XFreePixmap(display, pixmap)). After copy, do NOT release the given
handle. See L< IUP-IM Functions|../iupim.html> for utility functions on
image native handles. (GTK 2.6)

B<SAVEEMF> (write-only) [Windows Only]: saves the EMF from the
clipboard to the given filename. (Since 3.2)

B<SAVEWMF> (write-only) [Windows Only]: saves the WMF from the
clipboard to the given filename. (Since 3.2)

B<TEXT>: copy or paste text to or from the clipboard. If set to NULL
clears the clipboard data.

B<TEXTAVAILABLE> (read-only): informs if there is a text available at
the clipboard.

B<WMFAVAILABLE> (read-only) [Windows Only]: informs if there is a
Windows Metafile available at the clipboard. (Since 3.2)

=head2 Notes

In Windows when "TEXT" format data is copied to the clipboard, the
system will automatically store other text formats too if those formats
are not already stored. This means that when copying "TEXT" Windows
will also store "Unicode Text" and "OEM Text", but only if those format
were not copied before. So to make sure the system will copy all the
other text formats clear the clipboard before copying you own data (you
can simply set TEXT=NULL before setting the actual value).

=head2 Examples

 Ihandle* clipboard = IupClipboard();
 IupSetAttribute(clipboard, "TEXT", IupGetAttribute(text, "VALUE"));
 IupDestroy(clipboard);
 Ihandle* clipboard = IupClipboard();
 IupSetAttribute(text, "VALUE", IupGetAttribute(clipboard, "TEXT"));
 IupDestroy(clipboard);

=cut