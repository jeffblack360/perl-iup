=head1 IupFill

Creates void element, which dynamically occupies empty spaces always
trying to expand itself. Its parent should be an B<IupHbox,> an
B<IupVbox > or a B<IupGridBox>, or else this type of expansion will not
work. If an EXPAND is set on at least one of the other children of the
box, then the fill expansion is ignored.

It does not have a native representation.

=head2 Creation

 Ihandle* IupFill(void); [in C]
 iup.fill{} -> elem: ihandle [in Lua]
 fill() [in LED]

Returns: the identifier of the created element, or NULL if an error
occurs.

=head2 Attributes

L<EXPAND|../attrib/iup_expand.html> (non inheritable)(read-only): If
B<User> size is not defined, then when inside a B<IupHbox/IupGridBox>
EXPAND is HORIZONTAL, when inside a B<IupVbox> EXPAND is VERTICAL. If
B<User> size is defined then EXPAND is NO.

L<SIZE|../attrib/iup_size.html> /
L<RASTERSIZE|../attrib/iup_rastersize.html> (non inheritable): Defines
the width, if inside a B<IupHbox>, or the height, if it is inside a
B<IupVbox>. The standard format "wxh" can also be used, but width will
be ignored if inside a B<IupVbox >and height will be ignored if inside
a B<IupHbox> (since 3.3). When consulted behaves as the standard
SIZE/RASTERSIZE attributes.

B<WID> (read-only): returns -1 if mapped.

=over

----

=back

L<FONT|../attrib/iup_font.html>,
L<POSITION|../attrib/iup_position.html>,
L<MINSIZE|../attrib/iup_minsize.html>,
L<MAXSIZE|../attrib/iup_maxsize.html>: also accepted.

=head2 Examples

L<Browse for Example Files|../../examples/>

=head2 X<SeeAlso>See Also

L<IupHbox|iuphbox.html>, L<IupVbox|iupvbox.html>.

=cut